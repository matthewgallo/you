{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TweetBrain What's going on in your head? Send us your twitter, and we'll let you know! This is TweetBrain's main app. This Web App is created as a part of a WebJam at the Information and Computer Science Student Council in Univeristy of California, Irvine .","title":"TweetBrain"},{"location":"#tweetbrain","text":"What's going on in your head? Send us your twitter, and we'll let you know! This is TweetBrain's main app. This Web App is created as a part of a WebJam at the Information and Computer Science Student Council in Univeristy of California, Irvine .","title":"TweetBrain"},{"location":"contributing/","text":"Contributing Frontend vs Backend \ud83c\udfe0 Below is the structure of our project. \u2514\u2500\u2500\u2500tweetbrain \u251c\u2500\u2500\u2500backend \u2502 \u2514\u2500\u2500\u2500app \u2514\u2500\u2500\u2500frontend \u2514\u2500\u2500\u2500src Backend \u2692 The heavy work is done here. \u2514\u2500\u2500\u2500tweetbrain \u2514\u2500\u2500\u2500backend We are using a Python web framework called Fast API which is great for quickly creating Web APIs, including documentation. \ud83e\udde0 Learn more about Fast API All configuration files (e.g. requirements.txt ) are within tweetbrain/backend , with the Fast API files within tweetbrain/backend/app . For information about contributing to the backend Front End \u2728 The pretty work is done here. \u2514\u2500\u2500\u2500tweetbrain \u2514\u2500\u2500\u2500frontend We are using React to develop the front end (no specific framework chosen). \ud83e\udde0 Learn more about React All configuation files (e.g. package.json ) are in tweetbrain/frontend , with the React.js files within tweetbrain/frontend/src .","title":"Contributing"},{"location":"contributing/#contributing","text":"","title":"Contributing"},{"location":"contributing/#frontend-vs-backend","text":"\ud83c\udfe0 Below is the structure of our project. \u2514\u2500\u2500\u2500tweetbrain \u251c\u2500\u2500\u2500backend \u2502 \u2514\u2500\u2500\u2500app \u2514\u2500\u2500\u2500frontend \u2514\u2500\u2500\u2500src","title":"Frontend vs Backend"},{"location":"contributing/#backend","text":"\u2692 The heavy work is done here. \u2514\u2500\u2500\u2500tweetbrain \u2514\u2500\u2500\u2500backend We are using a Python web framework called Fast API which is great for quickly creating Web APIs, including documentation. \ud83e\udde0 Learn more about Fast API All configuration files (e.g. requirements.txt ) are within tweetbrain/backend , with the Fast API files within tweetbrain/backend/app . For information about contributing to the backend","title":"Backend"},{"location":"contributing/#front-end","text":"\u2728 The pretty work is done here. \u2514\u2500\u2500\u2500tweetbrain \u2514\u2500\u2500\u2500frontend We are using React to develop the front end (no specific framework chosen). \ud83e\udde0 Learn more about React All configuation files (e.g. package.json ) are in tweetbrain/frontend , with the React.js files within tweetbrain/frontend/src .","title":"Front End"},{"location":"backend/fastapi/","text":"Fast API \ud83d\udcc3 Documentation is here . Highly recommend reading the documentation, this is one of the best documented new tools out there (and not too intimating \ud83d\ude0a). Cool links These links are helpful for learning React Beginner tutorials Intro to Fast API - 25 min","title":"Fast API"},{"location":"backend/fastapi/#fast-api","text":"\ud83d\udcc3 Documentation is here . Highly recommend reading the documentation, this is one of the best documented new tools out there (and not too intimating \ud83d\ude0a).","title":"Fast API"},{"location":"backend/fastapi/#cool-links","text":"These links are helpful for learning React","title":"Cool links"},{"location":"backend/fastapi/#beginner-tutorials","text":"Intro to Fast API - 25 min","title":"Beginner tutorials"},{"location":"backend/start-here/","text":"Start Here Structure The backend is divided into three parts. \u2514\u2500\u2500\u2500backend \u251c\u2500\u2500\u2500app <-- Fast API app \u251c\u2500\u2500\u2500genius <-- Class and methods for Genius API \u2514\u2500\u2500\u2500twitter <-- Class and method for Twitter API genius and twitter will be called within app for our final product. app - Fast API Info here genius - lyricgenius We are using a Python wrapper for Genius's API called lyricgenius \ud83e\udde0 find out more about lyricgenius twitter - tweepy We are using a Python wrapper for Twitter's API called tweepy \ud83e\udde0 find out more about tweepy In addition to that, we are using nltk to process the tweets and figure out the most common words from a user's timeline. Quick Start Below are the instructions for running Fast API locally \ud83d\udc69\u200d\ud83d\udc67 Clone repository git clone https://github.com/tweetbrain/you cd you Navigate to tweetbrain/backend cd tweetbrain cd backend \ud83d\udc0d Create Python virtual environment There are a good amount of depencies for this project -- it will be good practice to use a virtual environment, albeit not necessary. On macOS and Linux: python3 -m virtualenv env On Windows: python -m venv env The second argument is the location to create the virtual environment. Generally, you can just create this in your project and call it env. \u2705 Activate virtual environment On macOS and Linux: source env/bin/activate On Windows Command Line: .\\env\\Scripts\\activate.bat One Windows Powershell .\\env\\Scripts\\activate.ps1 \ud83d\udce6 Navigate to the repository folder and install packages python -m pip install -r requirements.txt \ud83e\udd84 Run Fast API using uvicorn Run uvicorn. uvicorn app.main:app --reload You\u2019ll see output similar to this: \u2190[32mINFO\u2190[0m: Uvicorn running on \u2190[1mhttp://127.0.0.1:8000\u2190[0m (Press CTRL+C to quit) \u2190[32mINFO\u2190[0m: Started reloader process [\u2190[36m\u2190[1m38240\u2190[0m] using \u2190[36m\u2190[1mstatreload\u2190[0m \u2190[32mINFO\u2190[0m: Started server process [\u2190[36m13020\u2190[0m] \u2190[32mINFO\u2190[0m: Waiting for application startup. \u2190[32mINFO\u2190[0m: Application startup complete. donezo","title":"Start Here"},{"location":"backend/start-here/#start-here","text":"","title":"Start Here"},{"location":"backend/start-here/#structure","text":"The backend is divided into three parts. \u2514\u2500\u2500\u2500backend \u251c\u2500\u2500\u2500app <-- Fast API app \u251c\u2500\u2500\u2500genius <-- Class and methods for Genius API \u2514\u2500\u2500\u2500twitter <-- Class and method for Twitter API genius and twitter will be called within app for our final product.","title":"Structure"},{"location":"backend/start-here/#app-fast-api","text":"Info here","title":"app - Fast API"},{"location":"backend/start-here/#genius-lyricgenius","text":"We are using a Python wrapper for Genius's API called lyricgenius \ud83e\udde0 find out more about lyricgenius","title":"genius - lyricgenius"},{"location":"backend/start-here/#twitter-tweepy","text":"We are using a Python wrapper for Twitter's API called tweepy \ud83e\udde0 find out more about tweepy In addition to that, we are using nltk to process the tweets and figure out the most common words from a user's timeline.","title":"twitter - tweepy"},{"location":"backend/start-here/#quick-start","text":"Below are the instructions for running Fast API locally \ud83d\udc69\u200d\ud83d\udc67 Clone repository git clone https://github.com/tweetbrain/you cd you Navigate to tweetbrain/backend cd tweetbrain cd backend \ud83d\udc0d Create Python virtual environment There are a good amount of depencies for this project -- it will be good practice to use a virtual environment, albeit not necessary. On macOS and Linux: python3 -m virtualenv env On Windows: python -m venv env The second argument is the location to create the virtual environment. Generally, you can just create this in your project and call it env. \u2705 Activate virtual environment On macOS and Linux: source env/bin/activate On Windows Command Line: .\\env\\Scripts\\activate.bat One Windows Powershell .\\env\\Scripts\\activate.ps1 \ud83d\udce6 Navigate to the repository folder and install packages python -m pip install -r requirements.txt \ud83e\udd84 Run Fast API using uvicorn Run uvicorn. uvicorn app.main:app --reload You\u2019ll see output similar to this: \u2190[32mINFO\u2190[0m: Uvicorn running on \u2190[1mhttp://127.0.0.1:8000\u2190[0m (Press CTRL+C to quit) \u2190[32mINFO\u2190[0m: Started reloader process [\u2190[36m\u2190[1m38240\u2190[0m] using \u2190[36m\u2190[1mstatreload\u2190[0m \u2190[32mINFO\u2190[0m: Started server process [\u2190[36m13020\u2190[0m] \u2190[32mINFO\u2190[0m: Waiting for application startup. \u2190[32mINFO\u2190[0m: Application startup complete. donezo","title":"Quick Start"},{"location":"frontend/react/","text":"React \ud83d\udcc3 Documentation is here Cool links These links are helpful for learning React Beginner tutorials React + Node.js - 50 min React + Redux + Firebase - 263 min","title":"React"},{"location":"frontend/react/#react","text":"\ud83d\udcc3 Documentation is here","title":"React"},{"location":"frontend/react/#cool-links","text":"These links are helpful for learning React","title":"Cool links"},{"location":"frontend/react/#beginner-tutorials","text":"React + Node.js - 50 min React + Redux + Firebase - 263 min","title":"Beginner tutorials"}]}